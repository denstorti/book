[[appendix_ds1_table]]
[appendix]
== Summary Diagram and Table

Here's what our architecture looks like by the end of the book:

[[recap_diagram]]
image::images/apwp_aa01.png["diagram showing all components: flask+eventconsumer, service layer, adapters, domain etc"]

<<ds1_table>> recaps each pattern and what it does.

[[ds1_table]]
.The components of our architecture and what they all do
[cols="1,1,2"]
|===
| Layer | Component | Description

.5+a| *Domain*

__Defines the business logic.__


| Entity | A domain object whose attributes may change, but that has a recognizable identity over time.

| Value object | An immutable domain object whose attributes entirely define it. It is fungible with other identical objects.

| Aggregate | Cluster of associated objects that we treat as a unit for the purpose of data changes. Defines and enforces a consistency boundary.

| Event | Represents something that happened.

| Command | Represents a job the system should perform.

.3+a| *Service Layer*

__Defines the jobs the system should perform and orchestrates different components.__

| Handler | Receives a command or event and performs what needs to happen.
| Unit of work | Abstraction around data integrity. Each unit of work represents an atomic update. Makes repositories available. Tracks new events on retrieved aggregates.
| Message bus (internal) | Handles commands and events by routing them to the appropriate handler.

.2+a| *Adapters* (Secondary)

__Concrete implementations of an interface that goes from our system
to the outside world (I/O).__

| Repository | Abstraction around persistent storage. Each aggregate has its own repository.
| Event publisher | Pushes events onto the external message bus.

.2+a| *Entrypoints* (Primary adapters)

__Translate external inputs into calls into the service layer.__

| Web | Receives web requests and translates them into Commands, passing them to the Internal Message Bus.
| Event consumer | Reads events from the external message bus and translates them into commands, passing them to the internal message bus.

| N/A | External message bus (message broker) | A piece of infrastructure that different services use to intercommunicate, via events.
|===

